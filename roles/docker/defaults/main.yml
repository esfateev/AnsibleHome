###
### DO NOT EDIT THIS FILE!
### Add your customisations to inventories/<your_inventory>/group_vars/docker.yml
###

ansible_nas_user: ""

###
### Applications
###

# Downloading
transmission_with_openvpn_enabled: false # Please see docs about how to set VPN credentials
transmission_enabled: true
nzbget_enabled: false
pyload_enabled: false
utorrent_enabled: false
sabnzbd_enabled: true


# Media Serving
plex_enabled: true
tautulli_enabled: true

# Media Sourcing
sonarr_enabled: true         # tv
sickchill_enabled: false
couchpotato_enabled: false
radarr_enabled: true
get_iplayer_enabled: false
jackett_enabled: true
minidlna_enabled: false
jellyfin_enabled: true
emby_enabled: false
bazarr_enabled: true
ombi_enabled: false
lidarr_enabled: true
youtubedlmaterial_enabled: false

# Music
airsonic_enabled: true
airsonic_adv_enabled: true
mymediaforalexa_enabled: false
headphones_enabled: true
musicbrainz_enabled: true
navidrome_enabled: true

# News
miniflux_enabled: false

# System Management
pihole_enabled: true
heimdall_enabled: true
organizr_enabled: true
portainer_enabled: true
glances_enabled: true
stats_enabled: true
guacamole_enabled: false
netdata_enabled: false
watchtower_enabled: true
cloudflare_ddns_enabled: false
cloudcmd_enabled: false
virtual_desktop_enabled: false
krusader_enabled: true

# Backup & Restore
duplicati_enabled: true
nextcloud_enabled: false
timemachine_enabled: false

# Software build and CI
gitea_enabled: true

# IRC
znc_enabled: false
thelounge_enabled: false

# Password Management
bitwarden_enabled: false

# Finance
firefly_enabled: false

# Wallabag
wallabag_enabled: false

# Home Automation
homeassistant_enabled: true
mosquitto_enabled: true
homebridge_enabled: false
openhab_enabled: false

# Wiki JS
wiki_enabled: true

# Books
calibre_enabled: true

# Ubooquity
ubooquity_enabled: false

# Joomla
joomla_enabled: false

# PyTivo
pytivo_enabled: false

# SEO
serposcope_enabled: false

# External Access
# Traefik will allow access to certain applications externally. To enable this you'll either; a domain name that points to your 
# home static IP address, the cloudflare with the cloudflare_ddns dynamic DNS container enabled, or use a dynamic DNS provider like no-ip.
# You'll also need to map ports 80 and 443 from your router to your ansible-nas server, then enable the per-app "available_externally"
# settings.
traefik_enabled: true
traefik_port_http: "80"
traefik_port_https: "443"
traefik_port_ui: "8083"
###
### General
###

# Sets the timezone for your Ansible NAS
# You can find a list here https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
ansible_nas_timezone: Europe/Minsk

# Update all apt packages when playbook is run
keep_packages_updated: false

### Following options located in sensitive.yml
# ansible_nas_hostname:
# ansible_nas_user: 
# ansible_nas_domain:

###
### Docker
###
# Where you want Docker to store images
docker_image_directory: "{{ docker_home }}/data"

# Where you want Docker to store its container data.
docker_home: /mnt/Volume2/docker

# Docker storage driver, see https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-backing-filesystems
# You might want to change this to ZFS, depending on your underlying filesystem.
docker_storage_driver: overlay2

###
### Samba
###
# The location where all shares will be created by default. Can be overridden on a per-share basis.
# This path will be mounted to backup containers, Duplicati
samba_shares_root: /mnt/usb-hdd

# Where stuff downloaded will be stored
downloads_root: "{{ samba_shares_root }}/downloads"

# Where your movies are stored
movies_root: "{{ samba_shares_root }}/movies"

# Where your TV episodes are stored
tv_root: "{{ samba_shares_root }}/tv"

# Where torrent files are stored (picked up by Transmission for downloading)
torrents_root: "{{ samba_shares_root }}/torrents"

# Where music is stored
music_root: "{{ samba_shares_root }}/music"

# Where podcasts are stored
podcasts_root: "{{ samba_shares_root }}/podcasts"

# Where your books are stored
books_root: "{{ samba_shares_root }}/books"

# Where your comics are stored
comics_root: "{{ samba_shares_root }}/comics"

# Where photos are stored
photos_root: "{{ samba_shares_root }}/photos"

# The description that'll appear next to your Ansible-NAS box when browsing your network
samba_server_string: Ansible NAS

# Shares you want published over Samba.
samba_shares:
  - name: downloads
    comment: 'Stuff downloaded'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ downloads_root }}"

  - name: movies
    comment: 'Movies'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ movies_root }}"

  - name: tv
    comment: 'TV Episodes'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ tv_root }}"

  - name: music
    comment: 'Music'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ music_root }}"

  - name: podcasts
    comment: 'Podcasts'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ podcasts_root }}"

  - name: dump
    comment: 'File dump'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ samba_shares_root }}/dump"

  - name: games
    comment: 'Games'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ samba_shares_root }}/games"

  - name: photos
    comment: 'Pictures'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ samba_shares_root }}/photos"

  - name: books
    comment: 'Books'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ samba_shares_root }}/books"

  - name: comics
    comment: 'Comics'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ samba_shares_root }}/comics"

###
### NFS
###
# Data you want published over NFS. More info on the NFS config format can be found at
# https://help.ubuntu.com/community/SettingUpNFSHowTo#Shares
# WARNING: Weird things might happen if you share the same data over Samba and NFS and allow writes on both!

nfs_shares_root: /mnt/Volume3

nfs_exports:
  - "{{ nfs_shares_root }}/public *(rw,sync,no_root_squash)"

###
### Cloudflare
###
# Cloudflare is a great free DNS option for domains. If you use the cloudflare_ddns container then you'll need to
# set the options below.

# Your domain name
cloudflare_zone: "{{ ansible_nas_domain }}"

# The hostname you want the container to update. You shouldn't need to change this.
cloudflare_host: "*.{{ cloudflare_zone }}"

# Email address used to register for Cloudflare
cloudflare_email: "{{ ansible_nas_email }}"

###
### General
###
# Extra packages to install
ansible_extra_packages:
  - smartmontools
  - htop
  - zfsutils-linux
  - bonnie++
  - unzip
  - lm-sensors
  - ctop
  - net-tools
  - git
  - python3-venv
  - software-properties-common
  - mc
  - qemu-guest-agent

ansible_python_interpreter: /usr/bin/python3

###
### Samba
###
# Seems to break browsing of the \\server-name shares root when enabled
samba_mitigate_cve_2017_7494: false

# Enable apple exentensions for compatibility with apple clients
samba_apple_extensions: yes

# The account used when Samba shares are accessed. Shouldn't need to change this unless you want to
# mess with Samba user permissions.
samba_guest_account: ansible-nas

# How Samba behaves when an unknown user connects, see Samba docs for more info
samba_map_to_guest: Bad Password

# The NetBIOS hostname used by Samba on your network
samba_netbios_name: "{{ ansible_nas_hostname }}"

###
### Traefik
###
traefik_docker_image: traefik:v1.7
traefik_data_directory: "{{ docker_home }}/traefik"
traefik_debug: "false"

###
### Heimdall
###
heimdall_available_externally: "true"
heimdall_docker_image: linuxserver/heimdall:latest
heimdall_data_directory: "{{ docker_home }}/heimdall"
heimdall_port_http: "10080"
heimdall_port_https: "10443"


###
### Wiki JS
###
wiki_available_externally: "true"
wikidb_config_directory: "{{ docker_home }}/wiki-db"
wiki_port: "3001"
wiki_db_port: "3002"

###
### Gitea
###
gitea_available_externally: "true"
gitea_data_directory: "{{ docker_home }}/gitea"
gitea_port_http: "3003"
gitea_port_ssh: "222"

###
### Pi-hole
###
pihole_available_externally: "true"
pihole_data_directory: "{{ docker_home }}/pihole"
pihole_web: "8212"
#pihole_web_ssl: "3005"
pihole_dns_tcp: "53"
pihole_dns_udp: "53"

###
### Organizr
###
organizr_available_externally: "true"
organizr_data_directory: "{{ docker_home }}/organizr"
organizr_port_http: "10081"
organizr_port_https: "10444"
organizr_user_id: "1000"
organizr_group_id: "1000"

###
### Transmission
###
transmission_available_externally: "true"
transmission_with_openvpn_available_externally: "true"
transmission_config_directory: "{{ docker_home }}/transmission/config"
transmission_download_directory: "{{ downloads_root }}"
transmission_watch_directory: "{{ torrents_root }}"
transmission_user_id: "0"
transmission_group_id: "0"
transmission_local_network: "192.168.10.0/24"
transmission_webui_port: "9092"
transmission_external_port: "51414"
transmission_openvpn_webui_port: "9091"
transmission_openvpn_external_port: "51415"
transmission_openvpn_proxy_port: "3128"
transmission_openvpn_ratio_limit_enabled: "true"
transmission_openvpn_ratio_limit: "2"


###
### uTorrent
###
utorrent_available_externally: "true"
utorrent_config_directory: "{{ docker_home }}/utorrent/config"
utorrent_download_directory: "{{ downloads_root }}"
utorrent_port_http: "8111"
utorrent_port_bt: "6881"
utorrent_user_id: "0"
utorrent_group_id: "0"

###
### pyLoad
###
pyload_available_externally: "true"
pyload_config_directory: "{{ docker_home }}/pyload"
pyload_download_directory: "{{ downloads_root }}"
pyload_user_id: "0"
pyload_group_id: "0"
pyload_port: "8000"

###
### Plex
###
# If you're paranoid, set permissions to "ro" so Plex won't ever be able to
# delete your files
plex_available_externally: "true"
plex_config_directory: "{{ docker_home }}/plex/config"
plex_logs: "{{ docker_home }}/plex/logs"
plex_movies_directory: "{{ movies_root }}"
plex_movies_permissions: "rw"
plex_tv_directory: "{{ tv_root }}"
plex_tv_permissions: "rw"
plex_photos_directory: "{{ photos_root }}"
plex_photos_permissions: "rw"
plex_podcasts_directory: "{{ podcasts_root }}"
plex_podcasts_permissions: "rw"
plex_music_directory: "{{ music_root }}"
plex_music_permissions: "rw"
plex_user_id: "0"
plex_group_id: "0"
plex_port: "32400"

###
### Portainer
###
portainer_available_externally: "true"
portainer_data_directory: "{{ docker_home }}/portainer/config"
portainer_port: "9000"

###
### Watchtower
###
# Sets the 6 field cron schedule to use for checks and updates. This will check at 5am daily.
watchtower_cron_schedule: 0 0 5 * * *

# Slack notifications
watchtower_command: "--cleanup --schedule '{{ watchtower_cron_schedule }}'"
#### Following options located in sensitive.yml
# watchtower_slack_url
# watchtower_slack_id
# watchtower_slack_channel

###
### Tautulli
###
tautulli_available_externally: "true"
tautulli_config_directory: "{{ docker_home }}/tautulli/config"
tautulli_user_id: "0"
tautulli_group_id: "0"
tautulli_port: "8185"


###
### Duplicati
###
duplicati_available_externally: "true"
duplicati_data_directory: "{{ docker_home }}/duplicati/config"
duplicati_port: "8200"

###
### Sonarr
###
sonarr_available_externally: "true"
sonarr_data_directory: "{{ docker_home }}/sonarr/config"
sonarr_tv_directory: "{{ tv_root }}"
sonarr_download_directory: "{{ downloads_root }}"
sonarr_user_id: "0"
sonarr_group_id: "0"
sonarr_port: "8989"

###
### Radarr
###
radarr_available_externally: "true"
radarr_movies_directory: "{{ movies_root }}"
radarr_download_directory: "{{ downloads_root }}"
radarr_data_directory: "{{ docker_home }}/radarr"
radarr_user_id: "0"
radarr_group_id: "0"
radarr_port: "7878"

###
### sabnzbd
###
sabnzbd_available_externally: "true"
sabnzbd_data_directory: "{{ docker_home }}/sabnzbd/config"
sabnzbd_download_directory: "{{ downloads_root }}"
#sabnzbd_incomplite_download_directory: ""
sabnzbd_user_id: "0"
sabnzbd_group_id: "0"
sabnzbd_port: "8080"
sabnzbd_port2: "9090"

###
### Bazarr
###
bazarr_available_externally: "true"
bazarr_data_directory: "{{ docker_home }}/bazarr/config"
bazarr_tv_directory: "{{ tv_root }}"
bazarr_movies_directory: "{{ movies_root }}"
bazarr_user_id: "0"
bazarr_group_id: "0"
bazarr_port: "6767"

###
### lidarr
###
lidarr_available_externally: "true"
lidarr_data_directory: "{{ docker_home }}/lidarr/config"
lidarr_music_directory: "{{ music_root }}"
lidarr_downloads_directory: "{{ downloads_root }}"
lidarr_user_id: "0"
lidarr_group_id: "0"
lidarr_port: "8686"

###
### Jackett
###
jackett_available_externally: "false"
jackett_data_directory: "{{ docker_home }}/jackett"
jackett_torrents_root: "{{ torrents_root }}"
jackett_port: "9117"

###
### Headphones
###
headphones_available_externally: "true"
headphones_data_directory: "{{ docker_home }}/headphones"
headphones_torrents_root: "{{ torrents_root }}"
headphones_music_folder: "{{ music_root }}"
headphones_port: "8181"

###
### musicbrainz
###
musicbrainz_available_externally: "true"
musicbrainz_data_directory: "{{ docker_home }}/musicbrainz"
musicbrainz_port: "5000"

###
### Calibre
###
calibre_available_externally: "true"
calibre_data_directory: "{{ docker_home }}/calibre"
calibre_user_id: "0"
calibre_group_id: "0"
calibre_books_root: "{{ books_root }}"
calibre_port: "8084"
# To disable ebook conversion set calibre_ebook_conversion to "". To enable it set it to "linuxserver/calibre-web:calibre"
calibre_ebook_conversion: "linuxserver/calibre-web:calibre"

###
### Jellyfin
###
# If you're paranoid, set permissions to "ro" so jellyfin won't ever be able to
# delete your files
jellyfin_available_externally: "true"
jellyfin_config_directory: "{{ docker_home }}/jellyfin/config"
jellyfin_movies_directory: "{{ movies_root }}"
jellyfin_movies_permissions: "rw"
jellyfin_music_directory: "{{ music_root }}"
jellyfin_music_permissions: "rw"
jellyfin_photos_directory: "{{ photos_root }}"
jellyfin_photos_permissions: "rw"
jellyfin_tv_directory: "{{ tv_root }}"
jellyfin_tv_permissions: "rw"
jellyfin_user_id: "0"
jellyfin_group_id: "0"
jellyfin_port_http: "8896"
jellyfin_port_https: "8928"

###
### Glances
###
glances_available_externally: "false"
glances_port_one: "61208"
glances_port_two: "61209"

###
### Airsonic
###
airsonic_available_externally: "true"
airsonic_data_directory: "{{ docker_home }}/airsonic"
airsonic_music_directory: "{{ music_root }}"
airsonic_podcasts_directory: "{{ podcasts_root }}"
airsonic_port: "4040"

###
### Airsonic advanced
###
airsonic_adv_available_externally: "true"
airsonic_adv_data_directory: "{{ docker_home }}/airsonic"
airsonic_adv_music_directory: "{{ music_root }}"
airsonic_adv_podcasts_directory: "{{ podcasts_root }}"
airsonic_adv_port: "4041"


###
### Navidrome
###
navidrome_available_externally: "true"
navidrome_data_directory: "{{ docker_home }}/airsonic"
navidrome_music_directory: "{{ music_root }}"
navidrome_port: "4544"

###
### Krusader
###
krusader_available_externally: "false"
krusader_config_directory: "{{ docker_home }}/krusader/config"
krusader_browse_directory: "/"
krusader_user_id: "0"
krusader_group_id: "0"
krusader_secure_connection: "0"
krusader_vnc_password: "topsecret"
krusader_port_http: "5800"
krusader_port_vnc: "5900"

###
### Home Assistant
###
homeassistant_available_externally: "true"
homeassistant_data_directory: "{{ docker_home }}/homeassistant"
homeassistant_port: "8123"

###
### Mosquitto
###
mosquitto_available_externally: "false"
mosquitto_data_directory: "{{ docker_home }}/mosquitto"
mosquitto_port_a: "1883"
mosquitto_port_b: "9001"

###
### Stats
###
grafana_available_externally: "true"
telegraf_data_directory: "{{ docker_home }}/telegraf"
influxdb_data_directory: "{{ docker_home }}/influxdb"
grafana_data_directory: "{{ docker_home }}/grafana"
stat_collection_interval: 15s
grafana_influxdb_port: "8086"
grafana_port: "3000"